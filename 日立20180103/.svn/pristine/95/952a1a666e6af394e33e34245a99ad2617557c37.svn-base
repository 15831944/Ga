#region using
using FluentValidation;
using Gmail.DDD.Config;
using Gmail.DDD.DBContextScope;
using Gmail.DDD.Helper;
using Gmail.DDD.Repositorys;
using Gmail.DDD.Service;
using Gmail.DDD.SSO;
using PM2.Code;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using Gmail.DDD.Extensions;
using PM2.Models.Code031;
using System.Data.Entity;
using PM2.Repository.Code031;
using PM2.Service.Code001;
using PM2.Repository.Code030;
using PM2.Models.Code030;
#endregion
namespace PM2.Service.Code031
{
    /// <summary>
    /// 恢复原支付计划
    /// </summary>
    public class RestorePaymentAsync : IPaymentCommandAsync
    {
        private IDbContextScopeFactory _scopeFactory;
        private Iszrl125Repository_Facade _szrl125Repository;
        #region ctor
        public RestorePaymentAsync(
            IDbContextScopeFactory scopeFactory,
            Iszrl125Repository_Facade szrl125Repository)
        {
            this._scopeFactory = scopeFactory;
            this._szrl125Repository = szrl125Repository;
        }
        #endregion
        #region IPaymentCommandAsync
        public async Task<IOperateResult> CommandAsync(szrl125 szrl125)
        {
            using (IDbContextScope scope = this._scopeFactory.CreateScope())
            {
                //1.删除合同验收计划
                await this._szrl125Repository.RemoveIntoPayment(szrl125.rl12502);

                #region 还原合同支付计划
                //从一级缓存中获取数据
                szrl125 _szrl125 = this._szrl125Repository.Find(szrl125.rl12501);
                _szrl125.rl12507 = (_szrl125.rl12507 == 2 || _szrl125.rl12507 == 4) ? 0 : 1;

                _szrl125.szrl126s.Where(x => (x.rl12603 == 0 || x.rl12603 == 2) && x.rl12621 == 0)
                        .ForEach((x, y, isTrue) =>
                        {
                            if (x.rl12605 == 2)
                                x.rl12605 = 0;
                            x.rl12621 = 1;
                        });

                #endregion

                int index = await scope.SaveChangesAsync();
                if (index > 0)
                    return OperateResultFactory.AjaxOperateResult(OperateResultType.Success, "数据还原成功!");
                else
                    return OperateResultFactory.AjaxOperateResult(OperateResultType.Error, "数据还原失败!");
            }
        }
        #endregion
        
    }
}
