using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Gmail.DDD.Service;
using Gmail.DDD.Extensions;
using PM2.Models.Code030;
using Gmail.DDD.DBContextScope;
using Gmail.DDD.Repositorys;
using PM2.Models.Code001;
using Gmail.DDD.JsonConvert;
using PM2.Service.Code001;
using Gmail.DDD.PagedList;
using Gmail.DDD.Mvc;
using PM2.Repository.Code030;
using System.Data.Entity;
using Gmail.DDD.Config;

namespace PM2.Service.Code030
{
    public class szrl121Server : Iszrl121Server
    {
        private IDbContextScopeFactory _scopeFactory;
        private IEFRepository<szrl121> _szrl121Repository;//szrl121.采购合同验收处理
        private IEFRepository<szrl107> _szrl107Repository;//szrl107.采购合同登记-验收支付计划
        private IEFRepository<szrl004> _szrl004Repository;
        public szrl121Server(
             IDbContextScopeFactory scopeFactory,
             IEFRepository<szrl121> szrl121Repository,
             IEFRepository<szrl107> szrl107Repository,
             IEFRepository<szrl004> szrl004Repository
       )
        {
            this._scopeFactory = scopeFactory;
            this._szrl121Repository = szrl121Repository;
            this._szrl107Repository = szrl107Repository;
            this._szrl004Repository = szrl004Repository;
        }

        public IOperateResult QueryGridDataFor121(HttpCollection vParams)
        {
            try
            {
                using (IDbContextScope scope = this._scopeFactory.CreateScope())
                {
                    string Caigouhetongbanbenid = vParams.GetValue<string>("caigouhetongbanbenid"); //采购合同版本ID
                    Caigouhetongbanbenid = "191EC691-B3E1-434B-9A28-9E80C08C7B46";
                    string Zuofanid = vParams.GetValue<string>("zuofanid");
                    Zuofanid = Guid.NewGuid().ToString();
                    var IsHasVal = this._szrl121Repository.GetModels(y => y.rl12121 == Caigouhetongbanbenid && (y.rl12102 == 1 || y.rl12102 == 2 || y.rl12102 == 3));
                    if (IsHasVal.Count() > 0)
                    {
                        var _szrl004s = this._szrl004Repository.GetModels();
                        var query = (from a in this._szrl121Repository.GetModels(x => x.rl12121 == Caigouhetongbanbenid && (x.rl12102 == 1 || x.rl12102 == 2 || x.rl12102 == 3))
                                     orderby a.rl12122
                                     select new
                                     {
                                         rl12101 = a.rl12101,
                                         rl12102 = a.rl12102,
                                         rl12103 = a.rl12103,
                                         rl12104 = a.rl12104,
                                         rl12105 = a.rl12105,
                                         rl12106 = a.rl12106,
                                         rl12107 = a.rl12107,
                                         rl12108 = a.rl12108,
                                         rl12109 = a.rl12109,
                                         rl12110 = a.rl12110,
                                         rl12111 = a.rl12111,
                                         rl12113 = a.rl12113,
                                         rl12114 = a.rl12114,
                                         rl12117 = a.rl12117,
                                         rl12118 = a.rl12118,
                                         rl12119 = a.rl12119,
                                         rl12120 = a.rl12120,
                                         rl12121 = a.rl12121,
                                         rl12112 = a.rl12112,
                                         rl12115 = (
                                            from k in _szrl004s
                                            where k.rl00401.Equals(a.rl12115)
                                            select k.rl00403),
                                         rl12116 = a.rl12116
                                     }).ToList();
                        //手动排序，承认后，少一条本月数据，需要自己造一条
                        List<szrl121> _121lst = new List<szrl121>();
                        for (var x = 0; x < query.Count(); x++)
                        {
                            szrl121 _121model = new szrl121();
                            if (x == 0)
                            {
                                //今回検収
                                _121model.rl12101 = query[x].rl12101;
                                _121model.rl12102 = query[x].rl12102;
                                _121model.rl12103 = query[x].rl12103;
                                _121model.rl12104 = query[x].rl12104;
                                _121model.rl12105 = query[x].rl12105;
                                _121model.rl12106 = query[x].rl12106;
                                _121model.rl12107 = query[x].rl12107;
                                _121model.rl12108 = query[x].rl12108;
                                _121model.rl12109 = query[x].rl12109;
                                _121model.rl12110 = query[x].rl12110;
                                _121model.rl12111 = query[x].rl12111;
                                _121model.rl12120 = query[x].rl12120;
                                _121model.rl12121 = query[x].rl12121;
                                //今月再度検収予定
                                szrl121 _121model2 = new szrl121();
                                _121model2.rl12101 = "";
                            }
                        }


                        return OperateResultFactory.GridOperateResult(query);
                    }
                    else
                    {
                        //若rl10703不为空，代表的是BDE或L类。 如果为空， 代表的是K或L类
                        var query = (from a in this._szrl107Repository.GetModels(x => x.rl10702 == Caigouhetongbanbenid && x.rl10703 !="")
                                     orderby a.rl10704
                                     select new
                                     {
                                         rl10704 = a.rl10704,
                                         rl10705 = a.rl10705,
                                         rl10706 = a.rl10706
                                     }).ToList();
                        //已经按照日期顺序排序
                        List<szrl121> _121lst = new List<szrl121>();
                        for (var x = 0; x < query.Count(); x++)
                        {
                            szrl121 _121model = new szrl121();
                            if (x == 0)
                            {
                                //今回検収
                                _121model.rl12101 = Guid.NewGuid().ToString();
                                _121model.rl12102 = 1;
                                _121model.rl12103 = query[x].rl10704;
                                _121model.rl12104 = query[x].rl10705;
                                _121model.rl12105 = query[x].rl10706;
                                _121model.rl12106 = DateTime.Now.ToString("yyyy-MM-dd");
                                _121model.rl12107 = query[x].rl10705;
                                _121model.rl12108 = query[x].rl10706;
                                _121model.rl12109 = "";
                                _121model.rl12110 = "";
                                _121model.rl12111 = 0;
                                _121model.rl12120 = Zuofanid;
                                _121model.rl12121 = Caigouhetongbanbenid;
                                _121lst.Add(_121model);
                                //今月再度検収予定
                                szrl121 _121model2 = new szrl121();
                                _121model2.rl12101 = Guid.NewGuid().ToString();
                                _121model2.rl12102 = 2;
                                _121model2.rl12103 = query[x].rl10704;
                                _121model2.rl12104 = 0;
                                _121model2.rl12105 = 0;
                                _121model2.rl12106 = DateTime.Now.Year + "-" + (DateTime.Now.Month.ToString().Length == 1 ? "0" + DateTime.Now.Month.ToString() : DateTime.Now.Month.ToString());
                                _121model2.rl12107 = 0;
                                _121model2.rl12108 = 0;
                                _121model2.rl12109 = "";
                                _121model2.rl12110 = "";
                                _121model2.rl12111 = 0;
                                _121model2.rl12120 = Zuofanid;
                                _121model2.rl12121 = Caigouhetongbanbenid;
                                _121lst.Add(_121model2);
                            }
                            else
                            {
                                //来月以後検収予定
                                _121model.rl12101 = Guid.NewGuid().ToString();
                                _121model.rl12102 = 3;
                                _121model.rl12103 = query[x].rl10704;
                                _121model.rl12104 = query[x].rl10705;
                                _121model.rl12105 = query[x].rl10706;
                                _121model.rl12106 = query[x].rl10704 + "-01";
                                _121model.rl12107 = query[x].rl10705;
                                _121model.rl12108 = query[x].rl10706;
                                _121model.rl12109 = "";
                                _121model.rl12110 = "";
                                _121model.rl12111 = 0;
                                _121model.rl12120 = Zuofanid;
                                _121model.rl12121 = Caigouhetongbanbenid;
                                _121lst.Add(_121model);
                            }
                        }

                        return OperateResultFactory.GridOperateResult(_121lst);
                    }
                }
            }
            catch (Exception ex)
            {
                throw;
            }
        }

        public IOperateResult Insert121(HttpCollection vParams)
        {
            try
            {
                using (IDbContextScope scope = this._scopeFactory.CreateScope())
                {
                    List<szrl121> _121lst = vParams.GetValue<List<szrl121>>("BCJH_Grid_data", GetterType.JToken);
                    if (_121lst.Count > 0)
                    {
                        for (var i = 0; i < _121lst.Count; i++)
                        {
                            szrl121 _121model = new szrl121()
                            {
                                rl12101 = _121lst[i].rl12101,
                                rl12102 = _121lst[i].rl12102,
                                rl12103 = _121lst[i].rl12103,
                                rl12104 = _121lst[i].rl12104,
                                rl12105 = _121lst[i].rl12105,
                                rl12106 = _121lst[i].rl12106,
                                rl12107 = _121lst[i].rl12107,
                                rl12108 = _121lst[i].rl12108,
                                rl12109 = _121lst[i].rl12109,
                                rl12110 = _121lst[i].rl12110,
                                rl12111 = 1,
                                rl12113 = UserContext.Pj00401,
                                rl12114 = DateTime.Now.ToString("yyyy-MM-dd"),
                                rl12117 = 0,
                                rl12118 = UserContext.Pj00401,
                                rl12119 = DateTime.Now.ToString("yyyy-MM-dd"),
                                rl12120 = _121lst[i].rl12120,
                                rl12121 = _121lst[i].rl12121,
                                rl12112 = 1,
                                rl12115 = "",
                                rl12116 = "",
                                rl12122 = i
                            };
                            this._szrl121Repository.Add(_121model);
                        }
                        scope.SaveChanges();
                        return OperateResultFactory.AjaxOperateResult(OperateResultType.Success, "");
                    }
                    else
                    {
                        return OperateResultFactory.AjaxOperateResult(OperateResultType.Error, "");
                    }
                }
            }
            catch (Exception ex)
            {
                throw;
            }
        }

        public IOperateResult Contro121Btn(HttpCollection vParams)
        {
            try
            {
                using (IDbContextScope scope = this._scopeFactory.CreateScope())
                {
                    string Caigouhetongbanbenid = vParams.GetValue<string>("caigouhetongbanbenid"); //采购合同版本ID
                    Caigouhetongbanbenid = "191EC691-B3E1-434B-9A28-9E80C08C7B46";
                    var IsHasVal = this._szrl121Repository.GetModels(y => y.rl12121 == Caigouhetongbanbenid && (y.rl12111==1 || y.rl12111==2)).Select(c=>c.rl12111==1).ToList();
                    if (IsHasVal.Count() > 0)
                    {
                        return OperateResultFactory.AjaxOperateResult(OperateResultType.Success, "true");
                    }
                    else
                    {
                        return OperateResultFactory.AjaxOperateResult(OperateResultType.Success, "false");
                    }
                } 
            }
            catch (Exception ex)
            {
                throw;
            }
        }
    }
}
