#region using
using FluentValidation;
using Gmail.DDD.Config;
using Gmail.DDD.DBContextScope;
using Gmail.DDD.Helper;
using Gmail.DDD.Repositorys;
using Gmail.DDD.Service;
using Gmail.DDD.SSO;
using PM2.Code;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using Gmail.DDD.Extensions;
using PM2.Models.Code031;
using System.Data.Entity;
using PM2.Repository.Code031;
using PM2.Service.Code001;
using PM2.Repository.Code030;
using PM2.Models.Code030;
#endregion
namespace PM2.Service.Code031
{
    /// <summary>
    /// 支付计划调整
    /// </summary>
    public class AdjustPaymentAsync : IPaymentCommandAsync
    {
        private IDbContextScopeFactory _scopeFactory;
        private Iszrl125Repository_Facade _szrl125Repository;
        #region ctor
        public AdjustPaymentAsync(
            IDbContextScopeFactory scopeFactory,
            Iszrl125Repository_Facade szrl125Repository)
        {
            this._scopeFactory = scopeFactory;
            this._szrl125Repository = szrl125Repository;
        }
        #endregion
        #region IPaymentCommandAsync
        [BeforeSaveAttribute]
        public async Task<IOperateResult> CommandAsync(szrl125 szrl125)
        {
            try
            {
                using (IDbContextScope scope = this._scopeFactory.CreateScope())
                {

                }
            }
            catch (Exception ex)
            {
                
                throw;
            }
            return null;
        }
        #endregion
        
    }
}
