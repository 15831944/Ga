#region using
using FluentValidation;
using Gmail.DDD.Config;
using Gmail.DDD.DBContextScope;
using Gmail.DDD.Helper;
using Gmail.DDD.Repositorys;
using Gmail.DDD.Service;
using Gmail.DDD.SSO;
using PM2.Code;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using Gmail.DDD.Extensions;
using PM2.Models.Code031;
using System.Data.Entity;
using PM2.Repository.Code031;
using PM2.Service.Code001;
using PM2.Repository.Code030;
using PM2.Models.Code030;
#endregion
namespace PM2.Service.Code031
{
    /// <summary>
    /// 预付款|验收款
    /// </summary>
    public class AdvancePaymentAsync : IPaymentCommandAsync
    {
        private IDbContextScopeFactory _scopeFactory;
        private Iszrl105Repository _szrl105Repository;
        private Iszrl125Repository_Facade _szrl125Repository;
        #region ctor
        public AdvancePaymentAsync(
            IDbContextScopeFactory scopeFactory,
            Iszrl105Repository szrl105Repository,
            Iszrl125Repository_Facade szrl125Repository)
        {
            this._scopeFactory = scopeFactory;
            this._szrl105Repository = szrl105Repository;
            this._szrl125Repository = szrl125Repository;
        }
        #endregion
        #region IPaymentCommandAsync
        [BeforeSaveAttribute]
        public async Task<IOperateResult> CommandAsync(szrl125 szrl125)
        {
            using (IDbContextScope scope = this._scopeFactory.CreateScope())
            {
                #region 初始化-合同支付情况
                this._szrl125Repository.Add(szrl125);
                #endregion
                #region 初始化-[待支付确认]合同支付情况
                //更新主键对应
                List<object> upPks = new List<object>();
                IEnumerable<szrl105Model> szrl105s = await this._szrl105Repository.LoadAsync(szrl125.rl12502);
                szrl105s.OrderBy(x => x.rl10707).ForEach((x, y, isTrue) =>
                {
                    szrl126 szrl126 = new szrl126
                    {
                        //rl12601 =,                 //ID
                        //rl12602 = szrl125.rl12501, //主表ID szrl125.rl12501
                        rl12603 = 0,                 //初始来源 0:合同支付计划, 1:合同验收计划
                        rl12604 = x.rl10701,         //来源ID  
                        rl12605 = y == 0 ? 0 : 1,    //支付济 -1: 支付济, -2: 累計検収済, 0: 金回支付, 1: 今后支付预定, 2:[调整支付计划]今后支付预定

                        #region 元支付预定
                        rl12606 = x.rl10707, //支付日期
                        rl12607 = x.rl10708, //-%
                        rl12608 = x.rl10709, //金额
                        #endregion
                        #region 金回支付
                        rl12609 = DateTime.Now.ToString("yyyy-MM-dd"), //处理日期
                        rl12610 = x.rl10707, //支付日期
                        rl12611 = x.rl10708, //-%
                        rl12612 = x.rl10709, //金额
                        #endregion

                        //rl12613 = string.Empty, //附件ID
                        rl12614 = -1,             //付款性质 0: 预付款, 1:质保款, 2:验收款
                        rl12615 = 0,              //预付款扣款金额
                        rl12616 = 0,              //预付款扣款占合同%
                        rl12617 = 0,              //本次实际支付金额(含税)
                        rl12618 = 0,              //本次实际支付金额(不含税)

                        //rl12619 = x.rl12718,         //备注
                        rl12620 = UserContext.Pj00402, //担当者
                        rl12621 = 1
                    };
                    szrl125.szrl126s.Add(szrl126);
                    upPks.Add(new
                    {
                        rl12604 = szrl126.rl12604,
                        rl12601 = szrl126.rl12601
                    });
                });
                #endregion
                int index = await scope.SaveChangesAsync();
                if (index > 0)
                    return OperateResultFactory.AjaxOperateResult(OperateResultType.Success, "数据初始化成功!", upPks);
                else
                    return OperateResultFactory.AjaxOperateResult(OperateResultType.Error, "数据初始化失败!");

            }
        }
        #endregion
        
    }
}
